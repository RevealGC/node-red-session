version: '3.8'

services:
  # postgres:
  #   image: postgres:13.4
  #   container_name: postgres
  #   restart: always
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./postgres_data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   ports:
  #     - 5432:5432
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "jobRequest:8:1,qbes:64:1,qflow:64:1,jobOutput:64:1,jobStatusUpdate:64:1,dataSyncControl:1:1"
      KAFKA_NUM_NETWORK_THREADS: 64
      KAFKA_IO_THREADS: 64
      KAFKA_HEAP_OPTS: "-Xmx2g -Xms2g"
      KAFKA_MAX_REQUEST_SIZE: "10485760"
      KAFKA_MESSAGE_MAX_BYTES: "10485760"
  nodered:
    image: nodered/node-red:latest
    ports:
      - "1880:1880"
    volumes:
      - ./node-red-sync:/node-red-sync
    entrypoint: >
      sh -c "
      npm install --prefix /node-red-sync --unsafe-perm --no-update-notifier --no-fund --only=production
      && npm --no-update-notifier --no-fund start --cache /node-red-sync/.npm -- --userDir /node-red-sync"
    environment:
      - FLOWS=/node-red-sync/mc2.json
      - NODE_RED_USERNAME=admin
      - NODE_RED_PASSWORD=admin
      - TZ=UTC
    restart: always
networks:
  default:
volumes:
  node-red-sync: